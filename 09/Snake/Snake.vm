function Snake.new 3
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 6
pop local 1
push constant 0
pop local 2
push constant 1
pop this 1
push constant 32
push constant 16
call Location.new 2
push constant 0
call LinkedList.new 2
pop local 0
push local 0
pop this 0
label WHILE_EXP0
push local 2
push local 1
lt
not
if-goto WHILE_END0
push local 0
push constant 32
push local 2
add
push constant 16
call Location.new 2
push constant 0
call LinkedList.new 2
call LinkedList.setNext 2
pop temp 0
push local 0
call LinkedList.getNext 1
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Snake.setTail 1
push argument 0
pop pointer 0
push this 0
call LinkedList.getLocation 1
pop local 0
push local 0
call Location.getX 1
push local 0
call Location.getY 1
call Location.new 2
pop this 2
push constant 0
return
function Snake.moveBody 4
push argument 0
pop pointer 0
push this 0
pop local 0
label WHILE_EXP0
push local 0
call LinkedList.getNext 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call LinkedList.getNext 1
pop local 1
push local 0
call LinkedList.getLocation 1
pop local 2
push local 1
call LinkedList.getLocation 1
pop local 3
push local 2
push local 3
call Location.getX 1
call Location.setX 2
pop temp 0
push local 2
push local 3
call Location.getY 1
call Location.setY 2
pop temp 0
push local 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Snake.moveHead 6
push argument 0
pop pointer 0
push constant 0
pop local 2
push argument 1
call LinkedList.getLocation 1
pop local 3
push local 3
call Location.getX 1
pop local 0
push local 3
call Location.getY 1
pop local 1
push argument 2
push constant 1
eq
push this 1
and
push constant 3
eq
push argument 2
push constant 3
eq
push this 1
and
push constant 1
eq
or
push argument 2
push constant 2
eq
push this 1
and
push constant 4
eq
or
push argument 2
push constant 4
eq
push this 1
and
push constant 2
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
pop argument 2
goto IF_END0
label IF_FALSE0
push argument 2
pop this 1
label IF_END0
push argument 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
label IF_FALSE1
push argument 2
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
sub
pop local 1
label IF_FALSE2
push argument 2
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
sub
pop local 0
label IF_FALSE3
push argument 2
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 1
add
pop local 1
label IF_FALSE4
push pointer 0
push local 0
push local 1
push this 0
call Snake.checkCollusion 4
pop local 4
push local 4
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
return
label IF_FALSE5
push pointer 0
push local 0
push local 1
push argument 3
call Snake.checkFood 4
pop local 5
push local 5
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
pop local 2
push this 2
push this 0
call LinkedList.new 2
pop this 0
push constant 0
pop this 2
label IF_FALSE6
push local 3
push local 0
call Location.setX 2
pop temp 0
push local 3
push local 1
call Location.setY 2
pop temp 0
push pointer 0
call Snake.draw 1
pop temp 0
push local 2
return
function Snake.move 1
push argument 0
pop pointer 0
push pointer 0
call Snake.setTail 1
pop temp 0
push pointer 0
call Snake.moveBody 1
pop local 0
push pointer 0
push local 0
push argument 1
push argument 2
call Snake.moveHead 4
return
function Snake.checkCollusion 2
push argument 0
pop pointer 0
push argument 1
push constant 63
eq
push argument 1
push constant 0
lt
or
push argument 2
push constant 31
eq
or
push argument 2
push constant 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 3
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call LinkedList.getLocation 1
pop local 1
push local 1
call Location.getX 1
push argument 1
eq
push local 1
call Location.getY 1
push argument 2
eq
call Math.multiply 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push local 0
call LinkedList.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.checkFood 0
push argument 0
pop pointer 0
push argument 1
push argument 3
call Location.getX 1
eq
push argument 2
push argument 3
call Location.getY 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Snake.draw 2
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
call Location.getX 1
push constant 8
call Math.multiply 2
push this 2
call Location.getY 1
push constant 8
call Math.multiply 2
push constant 7
add
push this 2
call Location.getX 1
push constant 8
call Math.multiply 2
push constant 8
add
push this 2
call Location.getY 1
push constant 8
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call LinkedList.getLocation 1
pop local 1
push local 1
call Location.getX 1
push constant 8
call Math.multiply 2
push local 1
call Location.getY 1
push constant 8
call Math.multiply 2
push constant 7
add
push local 1
call Location.getX 1
push constant 8
call Math.multiply 2
push constant 8
add
push local 1
call Location.getY 1
push constant 8
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push local 0
call LinkedList.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
